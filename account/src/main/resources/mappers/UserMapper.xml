<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dutyujm.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.dutyujm.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phoneNumber" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="passWord" jdbcType="VARCHAR" property="passWord" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sid, name, phoneNumber, qq, email, photo, passWord
  </sql>

  <insert id="insert" parameterType="cn.dutyujm.pojo.User" >
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select LAST_INSERT_ID()
    </selectKey>
    insert into user (sid, name,
    phoneNumber, qq,
    email,passWord)
    values ( #{sid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR},
    #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
    #{passWord,jdbcType=VARCHAR})
  </insert>







  <select id="selectUserByName1" resultMap="BaseResultMap">
    select sid,name,phoneNumber,qq,email,photo
    from user
    where sid like CONCAT('%',#{title},'%') or name like CONCAT('%',#{title},'%') or phoneNumber like CONCAT('%',#{title},'%') or qq like CONCAT('%',#{title},'%') or email like CONCAT('%',#{title},'%')
  </select>

  <select id="selectUserByName" resultMap="BaseResultMap">
select * from (
    select sid,name,phoneNumber,qq,email,photo
    from user
    where sid like CONCAT('%',#{title},'%') or name like CONCAT('%',#{title},'%') or phoneNumber like CONCAT('%',#{title},'%') or qq like CONCAT('%',#{title},'%') or email like CONCAT('%',#{title},'%')) as T
     limit #{tmp}, #{limit};
  </select>

  <select id="countSelectUserByName" resultType="java.lang.Integer">
    select count(*)
    from user
    where sid like CONCAT('%',#{title},'%') or name like CONCAT('%',#{title},'%') or phoneNumber like CONCAT('%',#{title},'%') or qq like CONCAT('%',#{title},'%') or email like CONCAT('%',#{title},'%')
  </select>
<select id="selectBySid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from user
    where sid = #{sid,jdbcType=INTEGER}
</select>
  <select id="selectBySid2" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    id, sid, name, phoneNumber, qq, email, photo
    from user
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteBySid" parameterType="java.lang.Integer">
    delete from user
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
<!--  <insert id="insert" parameterType="cn.dutyujm.pojo.User">-->
<!--    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">-->
<!--      SELECT LAST_INSERT_ID()-->
<!--    </selectKey>-->
<!--    insert into user (id, sid, name, -->
<!--      phoneNumber, qq, email, -->
<!--      photo, passWord)-->
<!--    values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, -->
<!--      #{phonenumber,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, -->
<!--      #{photo,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})-->
<!--  </insert>-->
  <insert id="insertSelective" parameterType="cn.dutyujm.pojo.User">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="sid != null">
        sid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="password != null">
        passWord,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dutyujm.pojo.User">
    update user
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        passWord = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dutyujm.pojo.User">
    update user
    set sid = #{sid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      passWord = #{passWord,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateBySid" parameterType="cn.dutyujm.pojo.User">
    update user
    set sid = #{sid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      passWord = #{passWord,jdbcType=VARCHAR}
    where sid = #{sid,jdbcType=INTEGER}
  </update>

  <update id="updatePhoto" parameterType="cn.dutyujm.pojo.User">
    update user
    set  photo = #{photo,jdbcType=VARCHAR},
    where sid = #{sid,jdbcType=INTEGER}
  </update>

</mapper>